<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="TMR_Checker.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8XDf8fFw3/AAAAAAAA
        AAAAAAAAHxcN/x8XDf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHxcN/wAA
        AAAAAAAAAAAAAAAAAAAfFw3/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHxcN/wAAAAAAAAAAAAAAAAAA
        AAAfFw3/AAAAAAAAAAAAAAAAAAAAAB8XDf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8XDf8AwPz/HxcN/wAA
        AAAAAAAAAAAAAB8XDf8fFw3/HxcN/x8XDf8fFw3/HxcN/x8XDf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfFw3/AMD8/wDA
        /P8AwPz/HxcN/x8XDf8fFw3/AMD8/wDA/P8AwPz/AMD8/wDA/P8AwPz/AMD8/x8XDf8fFw3/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHxcN/wDA
        /P8AwPz/AMD8/wDA/P8fFw3/AMD8/wDA/P8AwPz/AMD8/wDA/P8AwPz/AMD8/wDA/P8AwPz/AMD8/wDA
        /P8ADgX/HxcN/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8X
        Df8AwPz/AMD8/wDA/P8AwPz/AMD8/wDA/P8fFw3/AMD8/wDA/P8AwPz/AMD8/wDA/P8Nvv//AMD8/wDA
        /P8AwPz/AMD8/x8XDf8AwPz/HxcN/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAHxcN/wDA/P8AwPz/AMD8/wDA/P8AwPz/AMD8/x8XDf8AwPz/AMD8/wDA/P8AwPz/AMD8/wDA
        /P8AwPz/AMD8/wDA/P8AwPz/HxcN/wDA/P8AwPz/HxcN/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAfFw3/AMD8/wDA/P8AwPz/AMD8/wDA/P8AwPz/AMD8/x8XDf8AwPz/AMD8/wDA
        /P8AwPz/AMD8/wDA/P8AwPz/AMD8/wDA/P8fFw3/AMD8/wDA/P8fFw3/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8XDf8AwPz/AMD8/wDA/P8AwPz/AMD8/wDA/P8AwPz/HxcN/wDA
        /P8AwPz/AMD8/wDA/P8AwPz/AMD8/wDA/P8AwPz/AMD8/x8XDf8AwPz/ABcA/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHxcN/wDA/P8AwPz/AMD8/wDA/P8AwPz/AMD8/wDA
        /P8gwP//AMD8/wDA/P8AwPz/AMD8/wDA/P8AwPz/AMD8/wDA/P8fFw3/AMD8/wDA/P8fFw3/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfFw3/AMD8/wDA/P8AwPz/AMD8/wDA
        /P8AwPz/AMD8/wDA/P8AwPz/AMD8/wDA/P8AwPz/AMD8/wDA/P8AwPz/AMD8/x8XDf8AwPz/HxcN/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfFw3/AMD8/wDA
        /P8AwPz/AMD8/wDA/P8AwPz/AMD8/wDA/P8AwPz/AMD8/wDA/P8AwPz/AMD8/wDA/P8AwPz/HxcN/x8X
        Df8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAfFw3/HxcN/x8XDf8AwPz/AMD8/wDA/P8AwPz/AMD8/wDA/P8AwPz/AMD8/wDA/P8AwPz/AMD8/x8X
        Df8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8XDf8AwPz/AMD8/wDA/P8AwPz/AMD8/wDA/P8AwPz/AMD8/wDA
        /P8AwPz/AMD8/x8XDf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHxcN/wDA/P8AwPz/AMD8/wDA/P8AwPz/AMD8/wDA
        /P8AwPz/AMD8/wDA/P8AwPz/HxcN/x8XDf8fFw3/HxcN/x8XDf8fFw3/HxcN/x8XDf8fFw3/HxcN/wAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8XDf8AwPz/AMD8/wDA/P8AwPz/AMD8/wDA
        /P8AwPz/AMD8/wDA/P8AADb/AAA2/wAANv8eH97/Hh/e/x4f3v8eH97/Hh/e/x4f3v8eH97/Hh/e/x4f
        3v8eH97/HxcN/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHxcN/wDA/P8AwPz/AMD8/wDA
        /P8AwPz/AMD8/wDA/P8AwPz/AAZA/x4f3v8eH97/Hh/e/x4f3v8eH97/Hh/e/x4f3v8eH97/Hh/e/x4f
        3v8eH97/Hh/e/x4f3v8fFw3/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8XDf8AwPz/AMD8/wDA
        /P8AwPz/AMD8/wDA/P8AwPz/AMD8/wDA/P8AADb/Hh/e/x4f3v8eH97/Hh/e/x4f3v8eH97/Hh/e/x4f
        3v8eH97/Hh/e/x8XDf8fFw3/HxcN/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHxcN/wDA
        /P8AwPz/AMD8/wDA/P8AwPz/AMD8/wDA/P8AwPz/AMD8/wDA/P8AADb/AAA2/x4f3v8eH97/Hh/e/x4f
        3v8eH97/Hh/e/x8XDf8fFw3/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAfFw3/AMD8/wDA/P8AwPz/J8H//wDA/P8AwPz/AMD8/wDA/P8AwPz/AMD8/wDA/P8AwPz/AAA2/wAA
        Nv8AADb/AAA2/wAANv8fFw3/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAB8XDf8AwPz/AMD8/wDA/P8AwPz/AMD8/x8XDf8fFw3/HxcN/wACC/8AwPz/AMD8/wDA
        /P8AwPz/AMD8/x8XDf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8XDf8AwPz/AMD8/wDA/P8fFw3/9/Tx/ykoDf8pKA3/KSgN/wAA
        Df8AwPz/AMD8/wDA/P8AwPz/HxcN/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACsA/wDA/P8AwPz/AMD8/x8XDf/39PH/9/Tx/yko
        Df8pKA3/AAAY/wDA/P8AwPz/AMD8/x8XDf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACgX/wDA/P8AwPz/AMD8/x8X
        Df8fFw3/HxcN/x8XDf8AwPz/AMD8/wDA/P8AwPz/HxcN/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHxcN/wDA
        /P8AwPz/AMD8/wDA/P8AwPz/AMD8/wDA/P8AwPz/AMD8/x8XDf8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAHxcN/x8XDf8AwPz/AMD8/wDA/P8AwPz/AMD8/x8XDf8fFw3/AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB8XDf8fFw3/HxcN/x8XDf8fFw3/HxcN/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/+c////vf//973//+OA///AAD//gAAP/wAAB/8AAAP/AAAD/wAAB/8AA
        Af/AAAP/4AAH//AAH//+AA///gAAB/wAAAP8AAAD+AAAB/gAAD/4AAD/+AAH//wAB//8AA///gAP//8A
        H///gD///+B///////////////////////8=
</value>
  </data>
</root>